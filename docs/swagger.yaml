definitions:
  main.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  main.Todo:
    properties:
      completed:
        type: boolean
      description:
        type: string
      id:
        type: integer
    type: object
host: localhost:8070
info:
  contact: {}
  description: This API documentation tells about simple CRUD operation without database.
    It's built by gin-gonic framework, and swagger for creating API documentation.
  title: This is TODO Appplicatione example without using database
  version: "1.0"
paths:
  /todos:
    get:
      description: Get all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Todo'
            type: array
      summary: Get all todos
    post:
      consumes:
      - application/json
      description: Add a new todo
      parameters:
      - description: Todo Object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.HTTPError'
      summary: Add a new todo
  /todos/{id}:
    delete:
      description: Delete a todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.HTTPError'
      summary: Delete a todo
    get:
      description: Get todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.HTTPError'
      summary: Get todo by ID
    put:
      consumes:
      - application/json
      description: Edit an existing todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Todo Object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.HTTPError'
      summary: Edit an existing todo
swagger: "2.0"
